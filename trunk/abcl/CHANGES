Version 0.23.1
==============
svn://common-lisp.net/project/armedbear/svn/tags/0.23.1/abcl
(unreleased)

Fixes
-----

* [svn r13509-10] Allow JSR-223 clients to query ABCL metadata without
  incurring the entire interpreter startup time.

* [svn r13506] Fix probles with loading FASLs in directories
  containing whitespace characters.
  
  We now require all PATHNAME objects constructed via a namestring
  containing the "file" scheme to be URI encoded according to
  RFC3986.  


Version 0.23
============
svn://common-lisp.net/project/armedbear/svn/tags/0.23.0/abcl
(25 November, 2010)

Features
--------

* [svn r12986] Update to ASDF 2.010.1

* [svn r12982] Experimental support for the long form
     of DEFINE-METHOD-COMBINATION

* [svn r12994] New java-interop macros: CHAIN and JMETHOD-LET

* [svn r13030-31,r13034] ASDF-INSTALL improvements: Ensure that the
     ASDF registry contains the ASDF-INSTALL locations.  Better
     resolution mechanism for 'gpg' binary.

Fixes
-----

* [svn r13039] Restore the Lisp-based build

* [ticket #108][svn r13027] Fix download problems with ASDF-INSTALL

* [svn r12995-12997] Changes to generated byte code to prevent JRockit JVM
     from crashing when optimizing it

* Various fixes in order to complete the Maxima test suite without failures

* [ticket #98] THREAD type specifier not exported from the THREADS package

* [svn r12946] Fix CLOS thread-safety

* [svn r12930] Fix non-constantness of constant symbols when using SET

* [svn r12929] Don't throw conditions on floating point underflow
    (fixes Maxima failures)

* [svn r12928] Fix for Java-collections-as-lisp-sequences support

* [svn r12927] Fix for regression to moved threads related symbols

* [ticket #104] SET changes value of symbols defined with DEFCONSTANT

* [ticket #88] Need a predicate to indicate source of compiled version
      ie Java vs Lisp

* [ticket #106] DEFSTRUCT :include with :conc-name creating overwriting
      inherited slot accessors

* [ticket #97] Symbol imported in multiple packages reported multiple
      times by APROPOS

* [ticket #107] Incorrect compilation of (SETF STRUCTURE-REF) expansion

* [ticket #105] DIRECTORY ignores :WILD-INFERIORS

Other
-----

* [svn r12918] Compiler byte code generator cleanup: introduction
      of generic class file writer, elimination of special purpose code
      in the compiler.

* Number of hashtable implementations reduced to 1 (from 5)

* Reduced use of 'synchronized' global hash table access by using
      the java.util.concurrent package

Version 0.22
============
svn://common-lisp.net/project/armedbear/svn/tags/0.22.0/abcl
(September 24, 2010)

Fixes
-----

* [svn r12902] Fix reading data with scandinavian latin1 characters

* [svn r12906] Respect the CLASSPATH environment variable in the
  abcl wrapper scripts

* [ticket #103] DOCUMENTATION not autoloaded

Other
-----

* [svn r12819] Until-0.22-compatibility hacks (in threads support) removed



Version 0.21
============
svn://common-lisp.net/project/armedbear/svn/tags/0.21.0/abcl
(July 24, 2010)


Features
--------

* [svn r12818] Update to ASDF 2.004

* [svn r12738-805] Support for custom CLOS slot definitions and
  custom class options.

* [svn r12756] slot-* functions work on structures too.

* [svn r12774] Improved Java integration: jmake-proxy can implement
  more than one interface.

* [svn r12773] Improved Java integration: functions to dynamically
  manipulate the classpath.

* [svn r12755] Improved Java integration: CL:STRING can convert Java
  strings to Lisp strings.

Fixes
-----

* [svn 12809-10-20] Various printing fixes.

* [svn 12804] Fixed elimination of unused local functions shadowed by macrolet.

* [svn r12798-803] Fixed pathname serialization across OSes.
  On Windows pathnames are always printed with forward slashes,
  but can still be read with backslashes.

* [svn r12740] Make JSR-223 classes compilable with Java 1.5

Other
-----

* [svn r12754] Changed class file generation and FASL loading
  to minimize reflection.

* [svn r12734] A minimal Swing GUI Console with a REPL
  is now included with ABCL.

Version 0.20
============
svn://common-lisp.net/project/armedbear/svn/tags/0.20.0/abcl
(24 May, 2010)


Features
--------

* [svn r12576] Support for CLOS METACLASS feature.

* [svn r12591-602] Consolidation of copy/paste code in the readers.

* [svn r12619] Update to ASDF2 (specifically to ASDF 1.719).

* [svn r12620] Use interpreted function in FASL when compilation fails.

* [ticket #95] PATHNAME-JAR and PATHNAME-URL subtypes now handle jar
  and URL references working for OPEN, LOAD, PROBE-FILE,
  FILE-WRITE-DATE, DIRECTORY, et. al.

* Many small speed improvements (by marking functions 'final').

* [ticket #91] Threads started through MAKE-THREAD now have a
    thread-termination restart available in their debugger.

* [svn r12663] JCLASS supports an optional class-loader argument.

* [svn r12634] THREADS:THREAD-JOIN implemented.

* [svn r12671] Site specific initialization code can be included in
  builds via the 'abcl.startup.file' Ant property.

Fixes
-----

* [ticket #89] Inlining of READ-LINE broken when the return value
    is unused.

* [svn r12636] Java class verification error when compiling PROGV
    in a context wanting an unboxed return value (typically a
    logical expression).

* [svn r12635] ABCL loads stale fasls instead of updated source
    even when LOAD is called with a file name without extension.

* [ticket #92] Codepoints between #xD800 and #xDFFF are incorrectly
    returned as characters from CODE-CHAR.

* [ticket #93] Reader doesn't handle zero returned values from
    macro functions correctly.

* [ticket #79] Different, yet similarly named, uninterned symbols
    are incorrectly coalesced into the same object in a fasl.

* [ticket #86] No restarts available to kill a thread, if none
    bound by user code.

* [svn r12586] Increased function dispatch speed by eliminating
    FIND-CLASS calls (replacing them by constant references).

* [svn r12656] PATHNAME-JAR now properly uses HTTP/1.1 HEAD requests
  to detect if remote resource has been changed.

* [svn r12643] PATHNAME-JAR now properly references Windows drive
    letters on DEVICE other than the default.

* [svn r12621] Missing 'build-from-lisp.sh' referenced in README now
    included in source release.

Other
-----

* [svn r12581] LispCharacter() constructors made private, in favor
    of getInstance() for better re-use of pre-constructed characters.

* [svn r12583] JAVA-CLASS reimplemented in Lisp.

* [svn r12673] Load 'system.lisp' moved later in boot sequence so
    unhandled conditions drop to debugger.

* [svn r12675] '--nosystem' commandline option inhibits loading of
    'system.lisp'.

* [svn r12642] Under Windows, pathname TYPE components can now contain
    embedded periods iff they end in '.lnk' to support shortcuts.


Version 0.19
============
svn://common-lisp.net/project/armedbear/svn/trunk/abcl
(14 Mar, 2010)

Features
--------

* [svn r12518] *DISASSEMBLER* may now contain a hook which returns the
  command to disassemble compiled functions.

* [svn r12516] An implementation of user-extensible sequences as
  proposed in Christopher Rhodes, "User-extensible sequences in Common
  Lisp", Proc. of the 2007 International Lisp Conference.

* [svn r12513] Implement SYS:SRC and SYS:JAVA logical pathname
  translations for system Lisp source and the root of the Java package
  structure, respectively.

* [svn r12505] All calls to anonymous functions and local functions that have
  been declared inline are now converted to LET* forms, reducing stack usage
  and the number of generated classes.

* [svn r12487] An initial port ASDF-INSTALL now forms the first ABCL
  contrib.  Such contribs are optionally built by the Ant target
  'abcl.contrib'.  ASDF-INSTALL is not expected to work very well
  under Windows in its present state.

* [svn r12447] [ticket:80] REQUIRE now searches for ASDF systems.

* [svn r12422] Jar pathname support extensively re-worked and tested
  so that LOAD, PROBE-FILE, TRUENAME, DIRECTORY, and WRITE-FILE-DATE
  all work both for local and remote jar pathnames of the form
  "jar:URL!/JAR-ENTRY".

  The loading ASDF systems from jar files is now possible.

  SYS:PATHNAME-JAR-P predicate signals whether a pathname references a
  jar.

  NB: jar pathnames do *not* currently work as an argument to OPEN.

  SYS:UNZIP implemented to unpack ZIP files.

  SYS:ZIP now has a three argument version for creating zip files with
  hierarchical entries.

* [svn r12450] Collect unprocessed command-line arguments in
  EXT:*COMMAND-LINE-ARGUMENT-LIST* (Dennis Lambe Jr.)

* [svn r12414] SYS::%GET-OUTPUT-STREAM-ARRAY returns a Lisp byte array
  from a Java byte array stream.

* [svn 12402] ABCL.TEST.LISP:RUN-MATCHING will now execute that subset
  of tests which match a string.


Fixes/Optimizations
-------------------

* [svn r12526] Unbinding of PROGV bound variables on local transfer
  of control (within-java-function jump targets)

* [svn r12510] The new ansi-test WITH-STANDARD-IO-SYNTAX.23 passes.
  Our with-standard-io-syntax implementation now correctly resets all necessary
  pprint variables. Patch by Douglas R. Miles, thanks for the contribution!

* [svn r12485] Pathnames starting with "." can now have TYPE.

* [svn r12484] FASLs containing "." characters not used to indicate
  type (i.e. ".foo.bar.baz.abcl") can now be loaded.

* [svn r12422] Pathname.java URL contructor under Windows now properly
  interprets the drive letter.

* [svn r12449] The 'abcl.jar' produced by Netbeans now contains a valid
  manifest (found by Paul Griffionen).

* [svn r12441] ZipCache now caches all references to ZipFiles based on
  the last-modified time for local files.  Remote files are always
  retrieved due to problems in the underlying JVM code.

  SYS:REMOVE-ZIP-CACHE implements a way to invalidate an entry given a
  pathname.

* [svn r12439] Remove duplication of java options in Windows
  'abcl.bat' script.

* [svn r12437] CHAR-CODE-LIMIT is the upper execlusive limit (found by
  Paul Griffionen).

* [svn r12436] Describe formatting was missing a newline (reported by
  Blake McBride).

* [svn 12469] Ensure that FILE-ERROR always has a value (possibly NIL)
  for its PATHNAME member.

* [svn r14222] MERGE-PATHNAMES no longer potentially shares structure
  between its result and *DEFAULT-PATHNAME-DEFAULTS*.

* [svn r12416] Fixed ANSI LAMBDA.nn test failures caused by errors in
  lambda inlining.

* [svn r12417] [ticket:83] Fix TRANSLATE-LOGICAL-PATHNAME regression.
  (Alan Ruttenberg).

* [svn r12412] Optimize memory efficiency of FORMAT by use of a
  hashtable rather than a CHAR-CODE-LIMIT array.

* [svn r12408] FIND-SYMBOL requires a  string argument.

* [svn r12400] Make NIL (as symbol) available to the compiler.

* [svn r12398] Move lambda list analysis to compile time where possible.

* [svn r12397] BROADCAST-STREAM obeys default external format fixing
  ANSI MAKE-BROADCAST-STREAM.8.

* [svn r12395] Improve arglist display for SLIME (Matthias Hölzl).

* [svn r12394] Optimize array utilization in closures.

* [svn r12393] Optimize array functions in compiler which don't
  require clearing the VALUES array.

* [svn r12392] Optimize/normalize aspects of boot.lisp

* [svn r12391] Prevent duplicated subclasses form occuring.


Other
-----

* [svn r12447] SYS::*MODULE-PROVIDER-FUNCTION* now provides a mechanism
  to extend the REQUIRE resolver mechanism at runtime.

* [svn r12430] Ant based build no longer writes temporary files to
  contain the Lisp build instructions.

* [svn r12481] STANDARD-CLASS now has slots to be inherited by
  deriving metaclasses in support of the (in progress) work on
  metaclass.

* [svn r12425] No longer ignore the METACLASS defclass option in
  support of the (in progress) work on metaclass

* [svn r12422] SYS::*LOAD-TRUENAME-FASL* now contains the TRUENAME of
  the Java "*.cls" component when loading a packed FASL.

* [svn r12461] Human readable Java representations for class cast
  exceptions for NULL and UNBOUND values.

* [svn r12453 et. ff.] Large numbers of the implementation of Java
  primitives have been declared in a way so that a stack trace
  provides a much more readable indication of what has been invoked.
  Primitives which extend Primitive are prefixed with "pf_"; those
  which extend SpecialOperator are prefixed with "sf_".

* [svn r12422] The internal structure of a jar pathname has changed.
  Previously a pathname with a DEVICE that was itself a pathname
  referenced a jar.  This convention was not able to simultaneously
  represent both jar entries that were themselves jar files (as occurs
  with packed FASLs within JARs) and devices which refer to drive
  letters under Windows.  Now, a pathname which refers to a jar has a
  DEVICE which is a proper list of at most two entries.  The first
  entry always references the "outer jar", and the second entry (if it
  exists) references the "inner jar".

* [svn r12419] Ant 'abcl.release' target centralizes the build steps
  necessary for creating releases.

* [svn r12409] Compiler now rewrites function calls with (LAMBDA …) as
  the operator to LET* forms.

* [svn r12415] CLASS-FILE renamed to ABCL-CLASS-FILE to prepare for
  (in progress) reworking of Stream inheritance.

* [svn r123406] 'test/lisp/abcl/bugs.lisp' forms a default location to
  add unit tests for current bug testing.  The intention is to move
  these tests into the proper location elsewhere in the test suite
  once they have been fixed.

* [svn r124040] Java tests upgraded to use junit-4.8.1.  Netbeans
  project runtime classpath now uses compilation results before source
  directory, allowing the invocation of ABCL in interpreted mode if
  the Ant 'abcl.compile.lisp.skip' property is set.  Java unit tests
  for some aspects of jar pathname work added.

*  New toplevel 'doc' directory now contains:

   + [svn r12410] Design for the (in progress) reworking of the Stream
     inheritance.

   + [svn r12433] Design and current status for the re-implementation
     of jar pathnames.

* [svn r12402] Change ABCL unit tests to use the ABCL-TEST-LISP definition
  contained in 'abcl.asd'.  Fixed and renabled math-tests.  Added new
  tests for work related to handling jar pathnames.

* [svn r12401] The REFERENCES-NEEDED-P field of the LOCAL-FUNCTION structure now
  tracks whether local functions need the capture of an actual
  function object.


Version 0.18.1
==============
svn://common-lisp.net/project/armedbear/svn/tags/0.18.1/abcl
(17 Jan, 2010)

Features:

 * Support for printing java objects with print-object
 * Support for disassembling proxied functions

Bugs fixed:

 * maxima works again

Version 0.18.0
==============
svn://common-lisp.net/project/armedbear/svn/tags/0.18.0/abcl
(12 Jan, 2010)


Features:

 * Programmable handling of out-of-memory and stack-overflow conditions
 * Faster initial startup (to support Google App Engine)
 * Faster special variable lookup
 * New interface for binding/unwinding special variables
 * Implement (SETF (STREAM-EXTERNAL-FORMAT <stream>) <format>)
 * Implement (SETF (JAVA:JFIELD <object>) <value>)
 * Constant FORMAT strings get compiled for performance


Bugs fixed:

 * FASLs are system default encoding dependent (ticket 77)
 * I/O of charset-unsupported characters causes infinite loop (ticket 76)
 * Memory leak where on unused functions with documentation
 * ANSI PRINT-LEVEL.* tests
 * Continued execution after failing to handle Throwable exceptions
 * Line numbers in generated java classes incorrect
 * JCALL, JNEW doesn't select best match when multiple applicable methods
 * STREAM-EXTERNAL-FORMAT always returns :DEFAULT, instead of actual format
 * REPL no longer hangs in Netbeans 6.[578] output window
 * Lambda-list variables replaced by surrounding SYMBOL-MACROLET


Other changes

 * LispObject does not inherit from Lisp anymore
 * Many functions declared 'final' for performance improvement
 * SYSTEM:*SOURCE* FASLs for system files no longer refer to intermediate build location


Version 0.17.0
==============
svn://common-lisp.net/project/armedbear/svn/tags/0.17.0/abcl
(07 Nov, 2009)


Features:

  * Google App Engine example project "Hello world"
  * Support for loading FASLs from JAR files
  * Checking of init-arguments for MAKE-INSTANCE (CLOS)
  * Support for *INVOKE-DEBUGGER-HOOK* (to support SLIME)
  * Reduced abcl.jar size (bytes and number of objects)
  * Faster access to locally bound specials (compiler efficiency)
  * Java property to print autoloading information: abcl.autoload.verbose
  * Experimental: binary fasls
  * Default Ant build target now "abcl.clean abcl.wrapper" (from abcl.help)
  * ConditionThrowable class renamed to ControlTransfer,
      parent class changed to RuntimeException (to make it unchecked)
  * API no longer throws ConditionThrowable/ControlTransfer


Bugs fixed:

  * Better fix for #63: Prevent exceptions from happening (GO and RETURN-FROM)
  * Restore ability for ABCL to be build host for SBCL
  * CLOS performance improvements through looser COMPILE dependency
  * Compilation fix for highest SPEED setting (triggered by CL-BENCH)
  * COMPILE's use of temp files eliminated
  * OpenJDK on Darwin now correctly identified
  * Incorrect block names for SETF functions defined by LABELS
  * Fixed MULTIPLE-VALUE-CALL with more than 8 arguments
  * Incorrect identification of lexical scope on recursive TAGBODY/GO
    and BLOCK/RETURN-FROM blocks (compiler and interpreter)
  * Correctly return 65k in char-code-limit (was 256, incorrectly)
  * Fixes to be able to run the BEYOND-ANSI tests (part of ANSI test suite)
  * Compiler typo fix
  * Implementation of mutex functionality moved to lisp from Java
  * Functions handling #n= and #n# are now compiled
  * Autoload cleanups
  * System package creation cleaned up
  * CHAR-CODE-LIMIT correctly reflects CHAR-CODE maximum return value
  * Precompiler macroexpansion failure for macros expanding into
      special operators


Version 0.16.1
==============
svn://common-lisp.net/project/armedbear/svn/tags/0.16.1/abcl
(17 Oct, 2009)

Bugs fixed:

  * More careful checking for null args in LispStackFrame
  * Honor appearance of &allow-other-keys in CLOS MAKE-INSTANCE
  * Fix #63: GO forms to non-existent TAGBODY labels would exit ABCL
  * Don't leak temp files during compilation

Version 0.16.0
==============
(06 SEP 2009)
svn://common-lisp.net/project/armedbear/svn/tags/0.16.0/abcl

  Summary of changes:
  ------------------
  * Fixed generated wrapper for path names with spaces (Windows)
  * Fixed ticket #58: Inspection of Java objects in Lisp code
  * Restored functionality of the built-in profiler
  * Profiler extended with hot-spot counting (as opposed to call counting)
  * Stack sampling in the profiler moved to scheduler thread to
    reduce impact on the program execution thread
  * THE type-checking for the interpreter
    (for simple-enough type specifications)
  * Added structure argument type checking in structure slot
    accessor functions
  * Make GENSYM thread-safe
  * Various performance fixes found by running the raytracer
    from http://www.ffconsultancy.com/languages/ray_tracer/benchmark.html
  * Better initarg checking for make-instance and change-class
    Fixes ansi-test errors CHANGE-CLASS.1.11, MAKE-INSTANCE.ERROR.3,
    MAKE-INSTANCE.ERROR.4, CHANGE-CLASS.ERROR.4 and SHARED-INITIALIZE.ERROR.4
  * Improve performance of StackFrames (Erik Huelsmann, Ville Voutilainen,
    with input from Peter Graves and Douglas Miles)
  * Improve performance of CLOS eql-specializers via cache (Anton Vodonosov)
  * 'build-from-lisp.sh' shell script (Tobias Rittweiler)
  * New threading primitives aligned with Java/JVM constructs (Erik Huelsmann)

      SYNCHRONIZED-ON
      OBJECT-NOTIFY
      OBJECT-NOTIFY-ALL
  * THREADS package created to hold threads related primitives:

      THREADP THREAD-UNLOCK THREAD-LOCK THREAD-NAME THREAD-ALIVE-P
      CURRENT-THREAD DESTROY-THREAD INTERRUPT-THREAD WITH-THREAD-LOCK
      MAKE-THREAD-LOCK MAKE-THREAD INTERRUPT-THREAD

      MAPCAR-THREADS

      GET-MUTEX MAKE-MUTEX WITH-MUTEX RELEASE-MUTEX

    These primitives are still part of the EXTENSIONS package but are
    now to be considered as deprecated, marked to be removed with
    0.22
  * Stacktraces now contain calls through Java code relevant to
    debugging (Tobias Rittweiler)

    Backtrace functionality been moved from EXT:BACKTRACE-AS-LIST to
    SYS:BACKTRACE to mark this changes.  The methods SYS:FRAME-TO-STRING
    and SYS:FRAME-TO-LIST can be used to inspect the new
    LISP_STACK_FRAME and JAVA_STACK_FRAME objects
  * Various stream input performance optimizations
  * Fixed breakage when combining Gray streams and the pretty printer
  * Performance improvements for resolution of non-recursive #=n and #n#


Version 0.15.0
==============
svn://common-lisp.net/project/armedbear/svn/tags/0.15.0/abcl
(07 Jun, 2009)

 Summary of changes:
 -------------------
  * 2 more MOP exported symbols to support Cells port
  * Updated FASL version
  * Support (pre)compilation of functions with a non-null lexical environment
  * Compiler and precompiler cleanups
  * 'rt.lisp' copy from ANSI test suite removed
  * Many documentation additions for the (pre)compiler
  * JSR-233 support improvements
  * Refactoring of classes:
   - deleted: CompiledFunction, ClosureTemplateFunction, CompiledClosure,
              Primitive0R, Primitive1R, Primitive2R
   - renamed: CompiledClosure [from ClosureTemplateFunction]
  * Compiler support for non-constant &key and &optional initforms
  * Fixed ticket #21: JVM stack inconsistency [due to use of RET/JSR]
  * Numerous special bindings handling fixes, especially with respect
    to (local) transfer of control with GO/RETURN-FROM
  * Paths retrieved using URL.getPath() require decoding (r11815)
  * Build doesn't work inside paths with spaces (r11813)
  * Compilation of export of a symbol not in *package* (r11808)
  * Moved compiler-related rewriting of forms from precompiler to compiler
  * Removed chained closures ('XEPs') in case of &optional arguments only
  * Loading of SLIME fails under specific conditions (r11791)
  * Binding of *FASL-ANONYMOUS-PACKAGE* breaks specials handling (r11783)
  * Fixed ANSI tests: DO-ALL-SYMBOLS.{6,9,12}, DEFINE-SETF-EXPANDER.{1,6,?},
      MULTIPLE-VALUE-SETQ.{5,8}, SYMBOL-MACROLET.8, COMPILE-FILE.{17,18}
  * COMPILE and COMPILE-FILE second and third values after a failed
      invocation inside the same compilation-unit (r11769)
  * JCLASS on non-existing classes should signal an error (r11762)
  * Dotted lambda lists break interpretation (r11760)
  * Implementation of MACROEXPAND-ALL and COMPILER-LET (r11755)
  * Switch from casting to 'instanceof' for performance (r11754)
  * Google App Engine support: don't die if 'os.arch' isn't set (r11750)
  * Excessive stack use while resolving #n= and #n# (r11474)


Version 0.14.1
==============
(5 Apr, 2009)
svn://common-lisp.net/project/armedbear/svn/tags/0.14.1/abcl

 Summary of changes:
 -------------------
  * Include this CHANGES file and scripting files in the tar and zip files


Version 0.14.0
==============
(5 Apr, 2009)
svn://common-lisp.net/project/armedbear/svn/tags/0.14.0/abcl

 Summary of changes:
 -------------------
  * Increased clarity on licensing (Classpath exception
     mentioned in COPYING, removed LICENSE)
  * Resolved infinite recursion on TRACEing the compiler
  * Changes on the lisp based build system for parity with Ant
  * Fixed interpreter creation in Java Scripting
  * libabcl.so no longer created; it was solely about installing
     a SIGINT handler. Libraries should not do that.
  * boxing of LispObject descendants in JCALL/JCALL-RAW fixed
  * OpenBSD and NetBSD platform detection
  * fixed special bindings restores in compiled code for
     MULTIPLE-VALUE-BIND/LET/LET*/PROGV and function bodies
  * introduced variadic list() function to replace list1() ... list9()
  * fix return value type of ACOS with complex argument
  * fixed precision of multiplication of complex values
  * fixed use of COMPILE inside file compilation (i.e. COMPILE-FILE)
  * fix expansion of macros inside RESTART-CASE
     (fixes RESTART-CASE ANSI failures)
  * fix macroexpansion in the precompiler
  * Fixnum and Bignum now use a static factory method;
      constructors are now private -> increases chances of numbers
      being EQ
  * Code cleanup in EXPT to fix (EXPT <any-number> <Bignum>)


Version 0.13.0
==============
(28 Feb, 2009)
svn://common-lisp.net/project/armedbear/svn/tags/0.13.0/abcl

 Summary of changes:
 -------------------
  * Separated J and ABCL into two trees
  * Many many compiler code cleanups
  * NetBeans project files
  * Support for CDR6 (See http://cdr.eurolisp.org/document/6/)
  * More efficient code emission in the compiler
  * Ant build targets for testing (abcl.test)
  * Use ConcurrentHashMap to store the lisp threads for increased performance
  * Fix adjustability of expressly adjustable arrays (ticket #28)
  * Fix calculation of upperbound on ASH in the compiler
     (don't calculate numbers too big, instead, return '*')
  * Introduce LispInteger as the super type of Bignum and Fixnum
  * Boxing/unboxing for SingleFloat and DoubleFloat values,
      inclusive of unboxed calculations
  * Fixed URL decoding bug in loadCompiledFunction (use java.net.URLDecoder)
  * Fixed line number counting
  * Inlining of simple calculations (+/-/*)
  * All static fields declared 'final'
  * Add support for java.lang.Long based on Bignum to our FFI


